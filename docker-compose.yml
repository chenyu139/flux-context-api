version: '3.8'

services:
  # GPU版本服务
  flux-api-gpu:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flux-kontext-api
    ports:
      - "8000:8000"
    environment:
      - DEVICE=cuda
      - DEBUG=false
      - HOST=0.0.0.0
      - PORT=8000
      - NVIDIA_VISIBLE_DEVICES=all
    volumes:
      - ./static:/app/static
      - ./logs:/app/logs
      - ~/.cache/modelscope:/root/.cache/modelscope  # HuggingFace缓存
    restart: unless-stopped
    command: /bin/bash -c "./start.sh --run_only"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    profiles:
      - gpu

  # 可选：Nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: flux-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/var/www/static:ro
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书目录（如果有）
    depends_on:
      - flux-api-gpu
    restart: unless-stopped
    profiles:
      - nginx

  # 可选：Redis缓存
  redis:
    image: redis:7-alpine
    container_name: flux-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    profiles:
      - redis

  # 可选：监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: flux-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    profiles:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: flux-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: flux-network